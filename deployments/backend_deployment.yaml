apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: my-app
spec:
  replicas: 2
  selector:
    matchLabels:
      pod: backend
  template:
    metadata:
      labels:
        pod: backend
    spec:
      #Un init container que nos permita asegurar que la BD ya esta corriendo
      initContainers:
        - name: wait-for-mysql
          image: busybox:1.36
          command: ['sh', '-c', 'until nc -z clusterip-db 3306; do echo "Esperando a MySQL..."; sleep 2; done;']
      containers:
        - name: backend-container
          image: frankgonzamc/flask-api:v2  # <-- tu imagen Flask
          ports:
            - containerPort: 5000 # puerto donde FLask trabaja normalmente
          env:
            - name: DB_HOST
              value: clusterip-db # Este es el servicio clusterIP que expone el deploy de la BD dentro del cluster
            - name: DB_PORT
              value: "3306" #Apuntar al puerto 3306 del service
            - name: DB_USER #Esta ira como variable del entorno, se accedería como $DB_USER
              valueFrom:
                configMapKeyRef:
                  name: mysql-config #Dentro del namespace llamará al configMap que tiene el name "mysql-config"
                  key: MYSQL_USER
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: MYSQL_DATABASE
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_PASSWORD
            
            